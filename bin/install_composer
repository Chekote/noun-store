#!/usr/bin/env bash

ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../" && pwd )"

. "$ROOT"/bin/lib/exitCheck.sh
. "$ROOT"/bin/lib/settings.sh

# Determine which sed to use to extract the composer version
if [ "$(uname)" == 'Darwin' ]; then
  # We're on Mac OS  X, so we need to use linux-sed
  SED=linux-sed
else
  # We're on Linux, so we can use the native sed
  SED=sed
fi

# Check for existing installation
if [ -e "$ROOT"/bin/composer ]; then
    echo "Checking Composer version..."
    FOUND_VERSION=$(composer --version | tail -1 | awk '{print $3}' | ${SED} -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g")

    # Check version of installed composer
    if [ "$FOUND_VERSION" == "$COMPOSER_VERSION" ]; then
        # Version is as expected. We're done.
        echo "Composer $COMPOSER_VERSION already installed."
        exit 0
    else
        # Version does not match. Remove it.
        echo "Removing Composer version ${FOUND_VERSION}..."
        rm "$ROOT"/bin/composer
        exitCheck $?
    fi
fi

# Install composer
echo "Installing Composer ${COMPOSER_VERSION}..."
curl -L  "https://getcomposer.org/download/${COMPOSER_VERSION}/composer.phar" > "$ROOT"/bin/composer
exitCheck $?

# Fix permissions
echo "Setting permissions on composer file.."
chmod 700 "$ROOT"/bin/composer
exitCheck $?

# Ensure ~/.composer is initialized
if [ -e ~/.composer ]; then
    echo "Initializing ~/.composer..."
    composer &> /dev/null
    exitCheck $?
fi